{"version":3,"file":"css/78.d09f2288.css","mappings":";AA4IA;EACE,cAAc;EACd,cAAc;AAChB","sources":["webpack://expert/./src/pages/Authentication/Login.vue"],"sourcesContent":["<template>\n  <div class=\"q-mt-xl q-pt-xl\">\n    <div class=\"flex flex-center\">\n     <img\n        alt=\"Quasar logo\"\n        src=\"~assets/img/logo.png\"\n        style=\"width: 200px; margin: 0 auto\"\n      />\n    </div>\n    <div class=\"text-h5 q-mt-md text-center primary-color-text\">\n      Insira seu email e código\n    </div>\n    <div>\n      <div>\n        <div class=\"row\">\n          <q-card style=\"margin: 0 auto\" class=\"col-12 col-md-6 col-lg-5 my-card\">\n            <q-card-section>\n              <div class=\"col-12\">\n\n                  <div class=\"q-pa-md \">\n\n                      <div class=\"q-pa-md\">\n                        <q-form\n                          @submit=\"onSubmit\"\n\n                          ref=\"myForm\"\n                          class=\"q-gutter-md\"\n                        >\n                          <q-input\n                            filled\n                            v-model=\"user.email\"\n                            label=\"Email*\"\n                            hint=\"\"\n                            type=\"email\"\n                            lazy-rules\n                            :rules=\"[ val => val && val.length > 0 || 'Digite seu email']\"\n                          />\n\n                          <q-input\n                            filled\n                            type=\"\"\n                            v-model=\"user.password\"\n                            label=\"Código *\"\n                            lazy-rules\n                            :rules=\"[ val => val && val.length > 0 || 'Digite seu código Expeert']\"\n                          />\n\n                          <div>\n                            <q-btn label=\"Login\" type=\"submit\" color=\"primary\"/>\n\n                            <q-btn label=\"User\" @click=\"teste\" color=\"primary\"/>\n                          </div>\n                        </q-form>\n\n                      </div>\n                    <h5>token: {{token}}</h5>\n                      <p>user: {{userAuth}}</p>\n                  </div>\n\n              </div>\n            </q-card-section>\n          </q-card>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Error from \"components/Error\";\nimport AuthService from \"src/Services/AuthServices\";\nimport Loading from \"src/Services/Loading\";\nexport default {\n  data() {\n    return {\n\n      model: \"\",\n      dense: false,\n      user: {\n        email: \"\",\n\n        password: \"\",\n      },\n      messageFromSerer: \"\",\n      denseOpts: false,\n    };\n  },\n  methods: {\n    teste(){\n      this.$axios.get('/api/user').then(data=>{\n        console.log('data ', data)\n      }).error(error=>{\n        console.log(error)\n      })\n    },\n    onSubmit() {\n\n      if (this.$refs.myForm !== null && this.$refs.myForm !== undefined) {\n        this.$refs.myForm.validate().then(success => {\n          if (success) {\n                 AuthService.login(this.user).then(success=>{\n                   console.log('login ', success)\n\n                   this.$store.dispatch(\"expert/setToken\", success)\n\n                   this.$store.dispatch(\"expert/getAuthUser\").then(data=>{\n                       Loading.openSuccess(\"Autenticação feita com sucesso\")\n                       // Error.closeprocessing()\n                       this.$router.push(\"/pagina-central\")\n                       console.log('gggggggg')\n                   });\n             }).catch(erro => {\n               console.log(erro)\n               Error.closeprocessing()\n                 Error.openNotify('Credenciais inválidas', 4000);\n             });\n          }\n        })\n\n      }\n\n    },\n  },\n  computed: {\n    userAuth(){\n      return this.$store.getters[\"expert/authUser\"]\n    },\n    token (){\n      return this.$store.getters[\"expert/token\"]\n    }\n  },\n  mounted() {\n\n  }\n};\n</script>\n\n<style>\n.q-spinner {\n  margin: 0 auto;\n  display: block;\n}\n</style>\n\n"],"names":[],"sourceRoot":""}